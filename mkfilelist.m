function mkfilelist(dataset,tardir,~,ext)
% mkimagelist: Makes a list of files and calculates sha512 hashes of each
% image. Stores hashes, image numbering and absolute paths in a structure
% in the projects folder. Calculates hashes using: http://www.mathworks.com
% /matlabcentral/fileexchange/31272-datahash
%
%   Inputs:
%   dataset: folder in which to putput image list variable
%   tardir: the directory in which the images are stored. Can be absolute
%       or relative. use '' to specify current working directory
%   filelist: List of file information as generated by the 'dir' command
%
tic
%% Create output struct and destination folders
    top_dir=[dataset,'\'];
    outdir=[top_dir,'files\'];
    if ~exist(outdir,'dir')
        mkdir(outdir)
    end
    if ~strcmp(tardir(end),'\')
        tardir=[tardir,'\'];
    end
    filelist=dir([tardir,'*',ext]);
    if strcmp(tardir,'')
        tardir=pwd;
    end
    N=length(filelist);
    paths=cell(N,1);
    sha256=cell(N,1);
    number=NaN([N,1]);
    % Prepare hashing structure
    opt.Method='SHA-256';
    opt.format='HEX';

% Check if the folder has already been hashed. If so, check the dirhash
% if exist([tardir,'srchash_',ext,'.mat'],'file');
%     load([tardir,'srchash_',ext,'.mat']);
%     % Drop srchash.mat from hash value
%     curdir=dir([tardir,'*',ext]);
%     for j=1:length(curdir)
%         if strcmp(curdir(j).name,['srchash_',ext,'.mat'])>0
%             curdir(j)=[];
%             break;
%         end
%     end
%     curdirhash=DataHash(curdir,opt);
%     if strcmp(srchash.dirhash,curdirhash) 
%         fileloc=srchash;
%         save([outdir,'fileloc_',ext,'.mat'],'fileloc');
%     else
%         warning('HDM:mkfilehash:hashchange',...
%             'The source directory has changed')
%         %keyboard;
%         calchash;
%     end
% else
    curdir=dir([tardir,'*',ext]);
    calchash;
% end
    toc;
    

    

    
    
    function calchash
        %% Loop through files and fill in imageloc structure
        bar=waitbar(0,'Analyzing directory...');
        tstart=now();
        for i=1:N
            paths{i}=[tardir,filelist(i).name];
            fid=fopen(paths{i});
            %curfile=fread(fid);
            fclose('all');
            if length(filelist(i).name)>7
                if ~isnan(str2double(filelist(i).name(end-7:end-4)))
                    number(i)=str2double(filelist(i).name(end-7:end-4));
                end
            end
            sha='temp';
            %sha=DataHash(curfile,opt);
            sha256{i}=sha;
            tleft= (N-i)*(now()-tstart)/i;
            waitbar(i/N,bar,['Analyzing directory. Time remaining: '...
                ,datestr(tleft,'HH:MM:SS')]);
        end
        delete(bar)
        fileloc.paths=paths;
        fileloc.sha256=sha256;
        fileloc.dirhash=DataHash(curdir,opt);
        fileloc.number=number;
        fileloc.dataset=dataset;
        fileloc.tardir=tardir;
    
    %% Output the imageloc structure to the source folder
        srchash=fileloc;
        %save([tardir,'srchash_',ext,'.mat'],'srchash');
        save([outdir,'fileloc_',ext,'.mat'],'fileloc');
    end
end

